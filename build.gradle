apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'eclipse'

group = 'org.bala.neela'
version = '1.0-SNAPSHOT'

description = 'Neela'

def jdkVersion = '1.8'
sourceCompatibility = "${jdkVersion}"
targetCompatibility = "${jdkVersion}"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }
}

repositories {
    mavenCentral()
}

def springVersion = '4.3.6.RELEASE'
def grpcVersion = '1.3.0'
def logbackVersion = '1.1.10'
def hamcrestVersion = '1.3'

dependencies {
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-beans:${springVersion}"
    compile "io.grpc:grpc-all:${grpcVersion}"
    compile 'org.pojomatic:pojomatic:2.0.1'
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile 'org.apache.commons:commons-lang3:3.5'
    compile "org.hamcrest:hamcrest-core:${hamcrestVersion}"
    compile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

eclipse {
    sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/java'
    sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/grpc'
}

task printSourceSets {
    sourceSets.each {
        println it
    }
}

task ListJars {
    doLast {
        configurations.testCompile.each { File file -> println file.name }
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Neela',
                   'Implementation-Version': version,
                   'Main-Class': 'org.bala.neela.fs.Neela'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
